// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Denigma.MemberController = (function(_super) {
    __extends(MemberController, _super);

    function MemberController() {
      MemberController.__super__.constructor.apply(this, arguments);
      this.set('search', null);
    }

    MemberController.prototype.index = function() {
      return this.render({
        view: new Batman.View({
          html: '[<div data-yield="foo"></div>]'
        })
      });
    };

    MemberController.prototype.out = function(node, event, context) {
      node = $(context.get("node"));
      return node.removeClass("selected");
    };

    MemberController.prototype.over = function(node, event, context) {
      node = $(context.get("node"));
      return node.addClass("selected");
    };

    MemberController.prototype.click = function(node, event, context) {
      var $node, model;
      node = context.get("node");
      $node = $(node);
      model = context.get("member");
      debugger;
    };

    MemberController.prototype.create = function() {
      new Denigma.Member.save();
      return this.set('search', null);
    };

    MemberController.prototype.save = function(node, event, context) {
      return alert("!");
    };

    MemberController.accessor('items', {
      get: function() {
        var items;
        items = Denigma.get('Member.all');
        return items;
      }
    });

    return MemberController;

  })(Batman.Controller);

  Denigma.root("member#index");

}).call(this);
