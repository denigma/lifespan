// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Denigma.IconView = (function(_super) {
    __extends(IconView, _super);

    /*
      this icon view that draws icons
    */


    IconView.prototype.resources = void 0;

    function IconView(poser, resources, dur) {
      this.resources = resources;
      this.dur = dur;
      this.getManipulationPic = __bind(this.getManipulationPic, this);
      this.getAnimalPic = __bind(this.getAnimalPic, this);
      IconView.__super__.constructor.call(this, poser);
    }

    IconView.prototype.addIcons = function(row) {
      /*
        this function add all icons to the rowumn and groups them inside svg
      */

      var icon;
      icon = row.append("svg");
      icon.attr("class", "icon");
      icon.append("rect").attr("class", "billet");
      icon.append("image").attr("class", "animal").attr("x", 0);
      return icon.append("image").attr("class", "manipulation").attr("x", 0);
    };

    IconView.prototype.getAnimalPic = function(d) {
      return "" + this.resources + "/" + d.animal.icon;
    };

    IconView.prototype.getManipulationPic = function(d) {
      return "" + this.resources + "/" + d.manipulation.icon;
    };

    IconView.prototype.updateIcons = function(sel) {
      /*
        make all icons drawing and binding routine
      */

      var gma, gpa, h, pos, posM;
      h = this.poser.contentHeight();
      pos = this.poser.getTopPos;
      posM = this.poser.getMiddlePos(h / 2);
      sel.select("rect.billet").attr("x", 0).attr("y", pos).attr("width", h * 1.5 + this.poser.marginX * 2).attr("height", h).attr("rx", 10).attr("ry", 10);
      gpa = this.getAnimalPic;
      sel.select("image.animal").transition().duration(this.dur).attr("xlink:href", gpa).attr("x", this.poser.marginX).attr("y", pos).attr("width", h).attr("height", h);
      gma = this.getManipulationPic;
      return sel.select("image.manipulation").transition().duration(this.dur).attr("xlink:href", gma).attr("x", this.poser.marginX + h).attr("y", posM).attr("width", h / 2).attr("height", h / 2);
    };

    IconView.prototype.append = function(novel) {
      return this.addIcons(novel);
    };

    IconView.prototype.update = function(sel) {
      return this.updateIcons(sel);
    };

    return IconView;

  })(Denigma.BasicView);

}).call(this);
