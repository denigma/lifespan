// Generated by CoffeeScript 1.6.3
/*
  Here is where the main code of the demo is
*/


(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Denigma.LifeSpan = (function(_super) {
    __extends(LifeSpan, _super);

    LifeSpan.prototype.fixture = void 0;

    LifeSpan.prototype.charts = void 0;

    function LifeSpan() {
      this.experiment = __bind(this.experiment, this);
      this.draw = __bind(this.draw, this);
      this.main = __bind(this.main, this);
    }

    LifeSpan.prototype.main = function() {
      this.fixture = new Denigma.Fixture();
      this.charts = new Denigma.LifeCharts("#lifespan");
      return this.draw();
    };

    LifeSpan.prototype.draw = function() {
      var c, data, els, h, sel, svg, w, x, y,
        _this = this;
      data = this.fixture.generate(10);
      w = 500;
      c = 30;
      h = c * data.length;
      svg = this.charts.svg;
      this.charts.setSize(w, h);
      svg.attr("class", "chart").style("background-color", "ivory");
      y = d3.scale.ordinal().domain(c);
      x = this.charts.makeOX(data);
      sel = this.charts.select(data);
      els = this.charts.enter(data);
      els.append("rect").attr("class", "max").transition().duration(800).attr("y", function(d, i) {
        return i * c;
      }).attr("width", this.charts.dXmax(x)).attr("height", c).style("fill", "lightgreen");
      return els.append("rect").attr("class", "mean").transition().duration(800).attr("y", function(d, i) {
        return i * c;
      }).attr("width", this.charts.dXmean(x)).attr("height", c).style("fill", "green").style("opacity", 0.2);
    };

    LifeSpan.prototype.experiment = function() {
      /*
        just for fun
      */

      var table, td, tr;
      table = d3.select("table");
      tr = table.selectAll("tbody tr");
      td = tr.selectAll("td");
      tr.transition().duration(1000).style("font-size", function(d, i) {
        switch (i) {
          case 0:
            return "10pt";
          case 1:
            return "20pt";
          case 2:
            return "3opt";
          default:
            return "40pt";
        }
      });
      return td.style("background-color", "white").transition().duration(1000).style("background-color", function(d, i) {
        switch (i) {
          case 0:
            return "red";
          case 1:
            return "navy";
          case 3:
            return "yellow";
          default:
            return "white";
        }
      });
    };

    return LifeSpan;

  })(Batman.Object);

  Denigma.on("start", function() {
    /*
      Event to initiate the main app
    */

    var ls;
    ls = new Denigma.LifeSpan();
    ls.main();
    return ls.experiment();
  });

  /*
    Lifespan
  ========
  * progress bar lifespan
    - normal lifespan of mice, icon for mice
  * errors bars
  * lifespan curves
  
  ICONS: species
  ICONS: manipulations (svgs)
  
  :Measurement a owl:Class ;
  :min_lifespan
  :mean_lifespan
  :median_lifespan
  :max_lifespan
  :number for each individual (low-average-hight)
  :variant +/- something
  :pvalue < or > 0.05 (colors or artrisks) *   ** ***
  */


}).call(this);
