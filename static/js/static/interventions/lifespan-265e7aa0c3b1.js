// Generated by CoffeeScript 1.6.3
/*
  Here is where the main code of the demo is
*/


(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Denigma.LifeSpan = (function(_super) {
    __extends(LifeSpan, _super);

    function LifeSpan() {
      _ref = LifeSpan.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    LifeSpan.prototype.fixture = void 0;

    LifeSpan.prototype.charts = void 0;

    LifeSpan.main = function() {
      LifeSpan.fixture = new Denigma.Fixture();
      LifeSpan.charts = new Denigma.Charts("#lifespan");
      LifeSpan.position();
      return LifeSpan.generate();
    };

    LifeSpan.position = function() {
      var h, svg, w;
      svg = LifeSpan.charts.svg;
      svg.style("background-color", "ivory");
      w = 800;
      h = 800;
      return LifeSpan.charts.setSize(w, h);
    };

    LifeSpan.generate = function() {
      var data, num;
      num = LifeSpan.fixture.rand(2, 5);
      data = LifeSpan.fixture.generate(num);
      return LifeSpan.charts.draw(data);
    };

    LifeSpan.experiment = function() {
      /*
        just for fun
      */

      var table, td, tr;
      table = d3.select("table");
      tr = table.selectAll("tbody tr");
      td = tr.selectAll("td");
      tr.transition().duration(1000).style("font-size", function(d, i) {
        switch (i) {
          case 0:
            return "10pt";
          case 1:
            return "20pt";
          case 2:
            return "3opt";
          default:
            return "40pt";
        }
      });
      return td.style("background-color", "white").transition().duration(1000).style("background-color", function(d, i) {
        switch (i) {
          case 0:
            return "red";
          case 1:
            return "navy";
          case 3:
            return "yellow";
          default:
            return "white";
        }
      });
    };

    return LifeSpan;

  }).call(this, Batman.Object);

  Denigma.on("start", function() {
    /*
      Event to initiate the main app
    */

    return Denigma.LifeSpan.main();
  });

}).call(this);
