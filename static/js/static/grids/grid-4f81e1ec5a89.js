// Generated by CoffeeScript 1.6.3
(function() {
  var _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Denigma.on("start", function() {
    /*
      Event to initiate the main app
    */

    return Denigma.Grid.main();
  });

  Denigma.Table = (function(_super) {
    __extends(Table, _super);

    function Table() {
      _ref = Table.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return Table;

  })(Denigma.Control);

  Denigma.Row = (function(_super) {
    __extends(Row, _super);

    function Row() {
      _ref1 = Row.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    Row.prototype.append = function(novel) {
      var td;
      td = novel.selectAll("*.cell");
      td.data(function(d) {
        return d;
      }).enter().append("div").attr("class", "cell").text(function(d, i) {
        return d;
      });
      return novel.selectAll("*.cell").text(function(d, i) {
        return d;
      });
    };

    Row.prototype.update = function(sel) {};

    return Row;

  })(Denigma.BasicView);

  Denigma.Grid = (function(_super) {
    __extends(Grid, _super);

    Grid.prototype.rows = null;

    Grid.prototype.body = void 0;

    function Grid(selector) {
      /*
        jquery-like selector string is passed,
        something like '#lifespan'
      */

      Grid.__super__.constructor.call(this, selector, "*.row", "grid");
      this.body = this.node.append("section");
      this.body.attr("class", "grid");
      this.rows = new Denigma.Row();
      this.addScrolling();
    }

    Grid.prototype.append = function(novel) {
      var row;
      row = novel.append("section").attr("class", "row");
      return this.rows.append(row);
    };

    Grid.prototype.addScrolling = function() {
      var horParams, params, verParams;
      params = {
        theme: "dark-thick",
        advanced: {
          updateOnContentResize: true,
          autoScrollOnFocus: true,
          updateOnContentResize: true,
          updateOnBrowserResize: true,
          autoHideScrollbar: true
        },
        scrollButtons: {
          enable: true
        }
      };
      verParams = params;
      $("#main").mCustomScrollbar(verParams);
      horParams = params;
      return horParams.horizontalScroll = true;
    };

    Grid.prototype.update = function(sel) {
      var row;
      row = sel.select("*.row");
      row.selectAll("td").style('background-color', "red");
      row.style("background-color", "red");
      return this.rows.update(row);
    };

    Grid.prototype.draw = function(data) {
      var novel, sel;
      sel = this.select(data);
      this.hide(sel.exit());
      novel = this.append(sel.enter());
      return this.update(sel);
    };

    Grid.prototype.select = function(data) {
      return this.body.selectAll("*." + this.subclass).data(data);
    };

    Grid.prototype.parse = function(data) {
      return this.draw(data);
    };

    Grid.prototype.load = function(uri) {
      var fun,
        _this = this;
      fun = function(data) {
        return _this.parse(data);
      };
      return d3.json(uri, fun);
    };

    Grid.main = function() {
      var table;
      table = new Denigma.Grid("#" + "main");
      return table.load('/data');
    };

    return Grid;

  })(Denigma.Control);

}).call(this);
